{
  "hash": "fb566c512ab0970093c8ec3a30635fa2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Testing `rhino` apps\" \nsubtitle: \"Part 4: Testing with `box` modules\"\nauthor: \"Martin Frigaard\"\ndate: \"2024-01-24\"\ncategories: [shiny, box, testing]\nimage: \"rhino.png\"\ndraft: true\ntoc: true\ntoc-depth: 5\ntoc-title: 'Contents'\ntoc-location: \"left\"\n# code-block-border-left: true\ncode-block-bg: \"#f8f8f8\"\ncode-block-border-left: \"#e8e8e8\"\ncode-fold: show\ncode-summary: 'show/hide'\ncallout-icon: false\n\nfreeze: true\n\nexecute:\n  echo: true\n  message: false\n  warning: false\n  eval: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"packages\"}\nlibrary(shiny)\nlibrary(shinytest2)\nlibrary(testthat)\nlibrary(rhino)\n```\n:::\n\n\n:::: {.callout-important collapse='false' appearance='default' icon=false}\n\n## [Note]{style='font-weight: bold; font-size: 1.15em;'}\n\n::: {style='font-size: 1.10em; color: #282b2d;'}\n\n\n\nThis post is under construction.\n  \n\n::: \n\n::::\n\n\nThe [`rhino` framework](https://appsilon.github.io/rhino/index.html) from [Appsilon](https://appsilon.com/) introduces a novel method for developing your Shiny application. Unlike the `golem` and `leprechaun` frameworks, `rhino` applications are not built inside R packages.\n\nThe example `rhino` application we'll be using comes from my `moviesApp` repo covered in the [Shiny App-Packages](https://mjfrigaard.github.io/shiny-app-pkgs/) book (you can access this app using the [`shinypak` package](https://mjfrigaard.github.io/shinypak/) or directly from the [repo](https://github.com/mjfrigaard/moviesApp/tree/24_rhino)).\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}