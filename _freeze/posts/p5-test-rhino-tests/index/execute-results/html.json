{
  "hash": "9e89188a7d53e581640d89117029ef85",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Testing `rhino` apps\" \nsubtitle: \"Part 5: Testing with `box` modules\"\nauthor: \"Martin Frigaard\"\ndate: \"2024-01-24\"\ncategories: [shiny, box, testing]\nimage: \"img/rhino.png\"\ndraft: true\ntoc: true\ntoc-depth: 5\ntoc-title: 'Contents'\ntoc-location: \"left\"\n# code-block-border-left: true\ncode-block-bg: \"#f8f8f8\"\ncode-block-border-left: \"#e8e8e8\"\ncode-fold: show\ncode-summary: 'show/hide'\ncallout-icon: false\n\nfreeze: true\n\nexecute:\n  echo: true\n  message: false\n  warning: false\n  eval: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"packages\"}\nlibrary(shiny)\nlibrary(shinytest2)\nlibrary(testthat)\nlibrary(rhino)\n```\n:::\n\n\n:::: {.callout-important collapse='false' appearance='default' icon=false}\n\n## [Note]{style='font-weight: bold; font-size: 1.15em;'}\n\n::: {style='font-size: 1.10em; color: #282b2d;'}\n\n\n\nThis post demonstrates some of the updated features to the [`rhino` framework.](https://appsilon.github.io/rhino/index.html) I also cover rhino in the [Shiny App-Packages boook.](https://mjfrigaard.github.io/shiny-app-pkgs/)\n  \n\n::: \n\n::::\n\n\n\n::: {.column-margin}\n\n![](img/rhino.png){width=50%}\n\n:::\n\nThe [`rhino` framework](https://appsilon.github.io/rhino/index.html) from [Appsilon](https://appsilon.com/) introduces a novel method for developing your Shiny application. Unlike the `golem` and `leprechaun` frameworks, `rhino` applications are not built inside R packages.\n\nThe example `rhino` application we'll be using comes from the [`sapkgs` repo](https://github.com/mjfrigaard/sapkgs/tree/rtapp). You can access this app using the following commands in the Terminal:\n\n\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"false\"}\ngit clone https://github.com/mjfrigaard/sapkgs.git\ncd sapkgs\nopen sapkgs.Rproj\n```\n:::\n\n\n\nThen checkout the `rtapp` branch:\n\n\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"false\"}\ngit checkout rtapp\n```\n:::\n\n\n\n## Build pane\n\nIf you happen to see the **Build** pane and want remove it, you can **Terminate the R** session in the IDE:\n\n:::{layout=\"[58, -2, 30]\" layout-valign=\"top\"}\n\n![**Build** Pane](img/build_pane.png){width='100%'}\n\n![**Session** > **Terminate R**](img/terminate.png){width='100%'}\n\n:::\n\nThis isn't required, but it removes the temptation to run any `devtools` functions while you're working in your `rhino` app.[^app-pkgs]\n\n[^app-pkgs]: Read more about the differences between Shiny apps and Shiny app-packages [Packages chapter of Shiny App-Packages](https://mjfrigaard.github.io/shiny-app-pkgs/packages.html), specifically the [R Projects section](https://mjfrigaard.github.io/shiny-app-pkgs/packages.html#r-projects). \n\n## App structure\n\nThe rhino application in `rtapp` includes a layout with `bslib` and the `movies` data from [Building Web Applications with Shiny](https://rstudio-education.github.io/shiny-course/).\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}