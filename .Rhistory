":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n"
)),
g = cat(paste0(
"\n",
":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; font-weight: bold; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n"
)),
o = cat(paste0(
"\n",
":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n"
)),
r = cat(paste0(
"\n",
":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; font-weight: bold; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n"
)),
stop("Invalid `type`", call. = FALSE)
)
}
options(scipen = 999)
# remotes::install_github("mjfrigaard/tsap",
#   force = TRUE, quiet = TRUE)
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(color = "r",
header = "ALERT!",
contents = "This post is currently under development--thank you for your patience.")
#| label: pkgs
#| code-summary: 'show/hide packages'
#| eval: true
#| message: false
#| warning: false
library(mstsap) # app package
library(palmerpenguins) # data
library(NHANES) # data
library(dplyr) # function
library(rlang) # traceback/stack trace
library(gt) # tables
#| code-fold: false
#| eval: true
remotes::install_github("mjfrigaard/mstsap", force = TRUE)
library(mstsap)
#| label: setup
#| eval: true
#| echo: false
#| include: false
source("../_common.R")
options(scipen = 999)
# remotes::install_github("mjfrigaard/tsap",
#   force = TRUE, quiet = TRUE)
library(mstsap)
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(color = "r",
header = "ALERT!",
contents = "This post is currently under development--thank you for your patience.")
#| label: pkgs
#| code-summary: 'show/hide packages'
#| eval: true
#| message: false
#| warning: false
library(debugApp) # app package
#| label: setup
#| eval: true
#| echo: false
#| include: false
library(ggplot2)
library(dplyr)
library(shiny)
library(vdiffr)
library(testthat)
library(shinytest2)
options(width = 60)
source("https://raw.githubusercontent.com/mjfrigaard/utap/main/tests/testthat/helper.R")
remotes::install_github("mjfrigaard/utap",
force = TRUE, quiet = TRUE)
# library(utap)
co_box <- function(color, header, contents = "Your text") {
class <- switch(color,
b = "note",
g = "tip",
r = "important",
o = "caution",
stop("Invalid `type`", call. = FALSE)
)
switch(color,
b = cat(paste0(
"\n",
":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n")),
g = cat(paste0(
"\n",
":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n")),
o = cat(paste0(
"\n",
":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n")),
r = cat(paste0(
"\n",
":::: {.callout-", class, " collapse='false'}", "\n\n",
"## ", header, "\n\n",
"::: {style='font-size: 1.10em; font-weight: bold; color: #696969;'}\n\n",
glue::glue_collapse(contents), "\n\n",
"::: \n\n",
"::::", "\n")),
stop("Invalid `type`", call. = FALSE)
)
}
options(scipen = 999)
#| label: pkgs
#| code-summary: packages
#| eval: true
library(testthat)
library(lobstr)
library(dplyr)
library(shiny)
library(covr)
#| label: co_box_tip
#| echo: false
#| results: asis
#| eval: true
co_box(color = "g", header = "TIP!", "This is a tip!")
#| code-fold: false
#| eval: false
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
#| code-fold: false
#| eval: false
testthat::test_that(desc = "description", code = {
})
#| code-fold: false
#| eval: false
testthat::expect_equal(object = 2 * 2, expected = 4)
#| eval: true
#| echo: false
palmerpenguins::penguins |>
dplyr::select(dplyr::where(is.numeric)) |>
colnames() |>
purrr::set_names()
testthat::test_file("tests/testthat/test-column_classes.R")
# library(utap)
source("../_common.R")
#| label: setup
#| eval: true
#| echo: false
#| include: false
library(ggplot2)
library(dplyr)
library(shiny)
library(vdiffr)
library(testthat)
library(shinytest2)
options(width = 60)
source("https://raw.githubusercontent.com/mjfrigaard/utap/main/tests/testthat/helper.R")
remotes::install_github("mjfrigaard/utap",
force = TRUE, quiet = TRUE)
# library(utap)
source("../_common.R")
fs::dir_tree("./")
fs::dir_tree("../")
fs::dir_tree("../.")
fs::dir_tree("../../")
source("_common.R")
source("https://github.com/mjfrigaard/sapkgs/blob/utap/tests/testthat/helper.R")
install.packages(c("dbplyr", "lattice", "survey"))
paste(rep("level", times = 3), 1:3)
paste(rep("level", times = 3), 1:3) |> dput()
paste(rep("item:", times = 3), 1:3) |> dput()
paste0(rep("item:", times = 3), 1:3)
test_col_class <- data.frame(
log_var = c(TRUE, FALSE, TRUE),
int_var = c(1L, 2L, 3L),
dbl_var = c(1.1, 2.2, 3.3),
chr_var = paste0(rep("item:", times = 3), 1:3),
ord_var = factor(
x = paste(rep("level", times = 3), 1:3),
levels = paste(rep("level", times = 3), 1:3),
labels = paste(rep("level", times = 3), 1:3),
ordered = TRUE
),
fct_var = factor(
x = paste(rep("group", times = 3), 1:3),
levels = paste(rep("group", times = 3), 1:3),
labels = paste(rep("group", times = 3), 1:3)
)
# create list variable
list_var <- list(
log = c(TRUE, FALSE, TRUE),
dbl = c(1.1, 2.2, 3.3),
chr = paste0(rep("item:", times = 3), 1:3)
)
# add to df
test_col_class$list_var <- list_var
test_col_class
str(test_col_class)
#| label: setup
#| eval: true
#| echo: false
#| include: false
library(ggplot2)
library(dplyr)
library(shiny)
library(vdiffr)
library(testthat)
library(shinytest2)
options(width = 60)
source("https://raw.githubusercontent.com/mjfrigaard/utap/main/tests/testthat/helper.R")
remotes::install_github("mjfrigaard/utap",
force = TRUE, quiet = TRUE)
# library(utap)
source("../_common.R")
#| eval: true
#| echo: false
#| code-fold: false
#| collapse: false
lobstr::ast(
pull_cols(
pull_binary_cols(
select_class(is_class()),
make_binary_vec(),
),
pull_cat_cols(
select_class(is_class())
),
pull_facet_cols(
select_class(is_class()),
make_facet_vec()
),
pull_numeric_cols(
select_class(is_class())
)
#| eval: true
#| echo: false
#| code-fold: false
#| collapse: false
lobstr::ast(
pull_cols(
pull_binary_cols(
select_class(is_class()),
make_binary_vec()
),
pull_cat_cols(
select_class(is_class())
),
pull_facet_cols(
select_class(is_class()),
make_facet_vec()
),
pull_numeric_cols(
select_class(is_class())
)
#| label: setup
#| eval: true
#| echo: false
#| include: false
library(ggplot2)
library(dplyr)
library(shiny)
library(vdiffr)
library(testthat)
library(shinytest2)
options(width = 60)
source("https://raw.githubusercontent.com/mjfrigaard/utap/main/tests/testthat/helper.R")
remotes::install_github("mjfrigaard/utap",
force = TRUE, quiet = TRUE)
# library(utap)
source("../_common.R")
#| eval: true
#| echo: false
#| code-fold: false
#| collapse: false
lobstr::ast(
pull_cols(
pull_binary_cols(
select_class(is_class()),
make_binary_vec(
check_binary_vec(
check_log_binary(),
check_int_binary(),
check_chr_binary(),
check_ord_binary()
)
)),
pull_cat_cols(
select_class(is_class())),
pull_facet_cols(
pull_binary_cols(),
select_class(is_class()),
make_facet_vec(
check_facet_vec(
check_chr_facet(),
check_fct_facet()
)
),
pull_numeric_cols(
pull_binary_cols(),
pull_facet_cols()
)
styler:::style_selection()
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
tibble::tibble(
log_var = log_maker(size = 3),
int_var = int_maker(size = 3),
fct_var = fct_maker(size = 3),
list_var = list(chr_var = chr_maker(size = 3),
ord_var = ord_maker(size = 3)),
)
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
tibble::tibble(
log_var = log_maker(size = 3),
int_var = int_maker(size = 3),
fct_var = fct_maker(size = 3),
list = list(chr_var = chr_maker(size = 3),
ord_var = ord_maker(size = 3)),
)
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
tibble::tibble(
log_var = log_maker(size = 3),
int_var = int_maker(size = 3),
fct_var = fct_maker(size = 3),
)
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
tibble::tibble(
log_var = log_maker(size = 3),
list_var = list(chr_var = chr_maker(size = 3),
ord_var = ord_maker(size = 3))
)
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
list(chr_var = chr_maker(size = 3),
ord_var = ord_maker(size = 3))
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
list_var <- list(chr_var = chr_maker(size = 3),
ord_var = ord_maker(size = 3))
tibble::tibble(
log_var = log_maker(size = 3),
list_var
)
tibble::tibble(
log_var = log_maker(size = 3),
list_var = list_var
)
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
list_var <- list(chr_var = chr_maker(size = 3),
ord_var = ord_maker(size = 3))
list_var
tibble::tibble(
log_var = log_maker(size = 3),
'list_var' = list_var
)
tibble::tibble(
list_var
)
tibble::tibble(
list_var,
fct_maker(size = 3, lvls = 2, missing = FALSE)
)
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
tibble::tibble(
log_var = log_maker(size = 3),
chr_var = chr_maker(size = 3),
ord_var = ord_maker(size = 3)
)
#| eval: true
#| echo: true
#| collapse: true
#| code-fold: false
tibble::tibble(
log_var = log_maker(size = 3),
chr_var = chr_maker(size = 3, lvls = 3),
ord_var = ord_maker(size = 3, lvls = 2)
)
#| label: setup
#| eval: true
#| echo: false
#| include: false
library(ggplot2)
library(dplyr)
library(shiny)
library(vdiffr)
library(testthat)
library(shinytest2)
options(width = 60)
source("https://raw.githubusercontent.com/mjfrigaard/utap/main/tests/testthat/helper.R")
remotes::install_github("mjfrigaard/utap",
force = TRUE, quiet = TRUE)
# library(utap)
source("../_common.R")
#| label: setup
#| eval: true
#| echo: false
#| include: false
source("https://raw.githubusercontent.com/mjfrigaard/sapkgs/mstsap/tests/testthat/helper.R")
source("../_common.R")
options(scipen = 999)
library(shiny)
library(lobstr)
library(crayon)
library(stringr)
# install.packages(c("NHANES", "palmerpenguins"))
library(NHANES)
library(palmerpenguins)
#| label: setup
#| eval: true
#| echo: false
#| include: false
source("https://raw.githubusercontent.com/mjfrigaard/sapkgs/mstsap/tests/testthat/helper.R")
source("../_common.R")
options(scipen = 999)
library(shiny)
library(lobstr)
library(crayon)
library(stringr)
# install.packages(c("NHANES", "palmerpenguins"))
library(NHANES)
library(palmerpenguins)
#| label: pkgs
#| eval: true
#| code-summary: packages
library(shiny)
library(shinytest2)
library(testthat)
library(rhino)
styler:::style_active_file()
#| label: setup
#| eval: true
#| echo: false
#| include: false
source("https://raw.githubusercontent.com/mjfrigaard/sapkgs/mstsap/tests/testthat/helper.R")
source("../_common.R")
options(scipen = 999)
library(shiny)
library(lobstr)
library(crayon)
library(stringr)
# install.packages(c("NHANES", "palmerpenguins"))
library(NHANES)
library(palmerpenguins)
#| code-fold: false
#| eval: false
install.packages("remotes")
remotes::install_github(
"https://github.com/mjfrigaard/sapkgs",
ref = "mstsap")
install.packages("remotes")
ls(package:mstsap)
ls('package:mstsap')
search()
library(mstsap)
search()
ls('package:mstsap')
library(msst2ap)
ls('package:msst2ap')
